from _typeshed import Incomplete

from minspect._internal import _locate_object as at
from minspect._internal import _proxy_helper as reference

__all__ = ['parent', 'reference', 'at', 'parents', 'children']

def parent(obj, objtype, ignore=()): ...
def parents(obj, objtype, depth: int = 1, ignore=()) -> list: ...
def children(obj, objtype, depth: int = 1, ignore=()) -> list: ...

class _PeekableReader:
    stream: Incomplete
    def __init__(self, stream) -> None: ...
    def read(self, n): ...
    def readline(self): ...
    def tell(self): ...
    def close(self): ...
    def peek(self, n): ...
